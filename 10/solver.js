var Expr,generate,generateBinary,generateUnary;Expr=function(){function t(t,e,n,r){this.value=t,this.operator=e,this.left=n,this.right=r}return t.prototype.clone=function(){return new t(this.value,this.operator,this.left,this.right)},t.prototype.minus=function(){switch(this.operator){case"minus":return this.left.clone();case"add":case"sub":return this.left.minus()[this.operator](this.right.minus());case"mul":case"div":return this.left.minus()[this.operator](this.right);default:return new t(-this.value,"minus",this.clone())}},t.prototype.hasMinus=function(){switch(this.operator){case"minus":return!0;case"add":case"sub":return this.left.hasMinus()&&this.right.hasMinus();case"mul":case"div":return this.left.hasMinus()||this.right.hasMinus();default:return!1}},t.prototype.add=function(e){return new t(this.value+e.value,"add",this.clone(),e.clone())},t.prototype.sub=function(e){return new t(this.value-e.value,"add",this.clone(),e.minus())},t.prototype.mul=function(e){var n;return n=e.hasMinus()?"minus":"clone",new t(this.value*e.value,"mul",this[n](),e[n]())},t.prototype.div=function(e){var n;return n=e.hasMinus()?"minus":"clone",new t(this.value/e.value,"div",this[n](),e[n]())},t.prototype.toString=function(t){var e,n,r,i;switch(null==t&&(t=""),e={add:"+",sub:"-",mul:"*",div:"/"},this.operator){case"self":return this.value.toString();case"minus":return"-"+this.left.toString("-");case"add":return i=this.right.toString("+"),r="-"===i[0]?"":"+",n=""+this.left.toString("+")+r+i,""===t||"+"===t?n:"("+n+")";case"mul":case"div":return""+this.left.toString("*")+e[this.operator]+this.right.toString("*");default:return new Error("not support: "+this.operator)}},t}(),generateUnary=function(t,e){e(t),"minus"!==t.operator&&e(t.minus())},generateBinary=function(t,e,n){generate(t,function(t){generate(e,function(e){n(t.add(e)),n(t.sub(e)),n(t.mul(e)),n(t.div(e))})})},generate=function(t,e){var n,r,i;switch(t.length){case 0:throw new Error;case 1:generateUnary(t[0],e);break;default:for(n=r=1,i=t.length;r<i;n=r+=1)generateBinary(t.slice(0,n),t.slice(n,+t.length+1||9e9),function(t){generateUnary(t,e)})}},self.addEventListener("message",function(t){generate(t.data.numbers.map(function(t){return new Expr(t,"self")}),function(e){e.value===t.data.answer&&self.postMessage({type:"result",value:e.toString()})}),self.postMessage({type:"finish"})},!1);